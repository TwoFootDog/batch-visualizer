pipeline {
    agent none
    options { skipDefaultCheckout(true) }
    stages {
        stage('Start') {
            agent any
	    steps {
                slackSend (channel: '#frontend-app', color: '#FFFF00', message: "STARTED: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]' (${env.BUILD_URL})")
	    }
	}
        stage('Build') {
            agent {
                docker {
                    image 'node:11-alpine'
		}
	    }
	    options { skipDefaultCheckout(false) } 
	    steps {
       		 	sh 'npm install'
			 	sh 'npm install --save axios'
			    sh 'npm run build'
	    }
	}
        stage('Docker build') {
	    agent any 
	    steps {
                sh 'docker build -t frontend-app-image:latest .'
            }
	}
	stage('Docker run') {
	    agent any 
	    steps {
                sh 'docker ps -f name=frontend-app-container -q | xargs --no-run-if-empty docker container stop'
		sh 'docker container ls -a -fname=frontend-app-container -q | xargs -r docker container rm'
                sh 'docker rmi $(docker images -f "dangling=true" -q)'
		sh 'docker run -d --name frontend-app-container -p 80:80 frontend-app-image:latest'
	    }
	}
    }
    post {
        success {
            slackSend (channel: '#frontend-app', color: '#00FF00', message: "SUCCESSFUL: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]' (${env.BUILD_URL})")
	}
	failure {
            slackSend (channel: '#frontend-app', color: '#FF0000', message: "FAILED: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]' (${env.BUILD_URL})")
	}
    }
}
